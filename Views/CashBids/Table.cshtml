@inherits DotNetNuke.Web.Mvc.Framework.DnnWebViewPage<DTN.Widgets.Models.CashBidsSettings>
@using DotNetNuke.Web.Mvc.Helpers
<script src="https://content-services.dtn.com/ui-widgets/cash-bids-table-widget/cash-bids-table-widget-1.0-latest.js"></script>

<div id="cash-bids-table-widget-@Dnn.ModuleContext.ModuleId">
</div>
@{    
    int totalCommodityCount = Model.hideCommodities.Count;
    int totalHideLocationsCount = Model.hideLocations.Count;
    int totalVisibleFields = Model.visibleFields.Count;

    int forLoopCounterCommodity = 0;
    int forLoopCounterHideLocations = 0;
    int forLoopCounterVisibleFields = 0;
    }

<script>
    window.dtn.cashBids.createCashBidsTableWidget({

        "apiKey": "@Model.apiKey",
        "container": "#cash-bids-table-widget-@Dnn.ModuleContext.ModuleId",
        "siteId": "@Model.siteId",
        "groupBy": "@Model.groupBy",
        "showGroupByOptions": @Model.showGroupByOptions.ToString().ToLower(),
        "view": "@Model.view",
        "showViewOptions": @Model.showViewOptions.ToString().ToLower(),
        "showLocationsSelect": @Model.showLocationsSelect.ToString().ToLower(),
        "showCommoditiesSelect": @Model.showCommoditiesSelect.ToString().ToLower(),
        "defaultLocation": {
            "locationName": "@Model.defaultLocation.name"
        },
        "hideCommodities": [
        @foreach (var x in Model.hideCommodities)
        {
            if (x == Model.hideCommodities[totalCommodityCount])
            {
                @Html.Raw("\"" + @x + "\"");
            } else
            {
                @Html.Raw("\"" + @x + "\"" + ",");
            }
        }
      ],
        "hideLocations": [
            @foreach (var x in Model.hideLocations)
        {
            if (x == Model.hideLocations[totalHideLocationsCount - 1])
            {
                @Html.Raw("\"" + @x + "\"");
            } else
            {
                @Html.Raw("\"" + @x + "\"" + ",");
            }
        }
      ],
      "visibleFields": [
        @foreach (var x in Model.visibleFields)
        {
            forLoopCounterVisibleFields = forLoopCounterVisibleFields + 1;
            if (@x.IsChecked)
            {
                if (forLoopCounterVisibleFields == totalVisibleFields)
                {
                    @Html.Raw("\"" + @x.FieldName + "\"");
                } else
                {
                    @Html.Raw("\"" + @x.FieldName + "\"" + ",");
                }
            }
        }
      ]
});
</script>